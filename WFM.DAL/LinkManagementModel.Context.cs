//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WFM.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LinkManagementEntities : DbContext
    {
        public LinkManagementEntities()
            : base("name=LinkManagementEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<DataAudit> DataAudits { get; set; }
        public virtual DbSet<Designation> Designations { get; set; }
        public virtual DbSet<Division> Divisions { get; set; }
        public virtual DbSet<LoginAudit> LoginAudits { get; set; }
        public virtual DbSet<Organization> Organizations { get; set; }
        public virtual DbSet<OrganizationType> OrganizationTypes { get; set; }
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<PersonHistory> PersonHistories { get; set; }
        public virtual DbSet<PersonRelationship> PersonRelationships { get; set; }
        public virtual DbSet<PersonRelationshipDetail> PersonRelationshipDetails { get; set; }
        public virtual DbSet<RelationshipType> RelationshipTypes { get; set; }
        public virtual DbSet<SubOrganization> SubOrganizations { get; set; }
        public virtual DbSet<Title> Titles { get; set; }
        public virtual DbSet<WFM_Configuration> WFM_Configuration { get; set; }
        public virtual DbSet<WFM_Contact> WFM_Contact { get; set; }
        public virtual DbSet<WFM_Country> WFM_Country { get; set; }
        public virtual DbSet<WFM_Document> WFM_Document { get; set; }
        public virtual DbSet<WFM_DocumentField> WFM_DocumentField { get; set; }
        public virtual DbSet<WFM_DocumentTab> WFM_DocumentTab { get; set; }
        public virtual DbSet<WFM_Employee> WFM_Employee { get; set; }
        public virtual DbSet<WFM_Marketing> WFM_Marketing { get; set; }
        public virtual DbSet<WFM_MarketingSourcingPartner> WFM_MarketingSourcingPartner { get; set; }
        public virtual DbSet<WFM_Organization> WFM_Organization { get; set; }
        public virtual DbSet<WFM_Principal> WFM_Principal { get; set; }
        public virtual DbSet<WFM_PrincipalContact> WFM_PrincipalContact { get; set; }
        public virtual DbSet<WFM_ProjectDocument> WFM_ProjectDocument { get; set; }
        public virtual DbSet<WFM_ProjectDocumentFieldValue> WFM_ProjectDocumentFieldValue { get; set; }
        public virtual DbSet<WFM_ProjectDocumentTab> WFM_ProjectDocumentTab { get; set; }
        public virtual DbSet<WFM_ProjectSector> WFM_ProjectSector { get; set; }
        public virtual DbSet<WFM_ProjectStatus> WFM_ProjectStatus { get; set; }
        public virtual DbSet<WFM_ProjectType> WFM_ProjectType { get; set; }
        public virtual DbSet<WFM_SourcingPartner> WFM_SourcingPartner { get; set; }
        public virtual DbSet<WFM_TenderDocumentSection> WFM_TenderDocumentSection { get; set; }
        public virtual DbSet<WFM_TenderDocumentType> WFM_TenderDocumentType { get; set; }
        public virtual DbSet<WFM_Title> WFM_Title { get; set; }
        public virtual DbSet<WFM_ProjectDocumentHistory> WFM_ProjectDocumentHistory { get; set; }
        public virtual DbSet<WFM_MethodOfIntroduction> WFM_MethodOfIntroduction { get; set; }
        public virtual DbSet<WFM_PriorityFramework> WFM_PriorityFramework { get; set; }
        public virtual DbSet<WFM_Designation> WFM_Designation { get; set; }
        public virtual DbSet<WFM_Division> WFM_Division { get; set; }
        public virtual DbSet<WFM_CommonData> WFM_CommonData { get; set; }
        public virtual DbSet<WFM_DataAudit> WFM_DataAudit { get; set; }
        public virtual DbSet<WFM_LoginAudit> WFM_LoginAudit { get; set; }
        public virtual DbSet<WFM_Project> WFM_Project { get; set; }
        public virtual DbSet<WFM_EmailTemplates> WFM_EmailTemplates { get; set; }
    
        public virtual ObjectResult<GetDataAuditByUser_Result> GetDataAuditByUser(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDataAuditByUser_Result>("GetDataAuditByUser", userIdParameter);
        }
    
        public virtual ObjectResult<GetLoginAuditByUser_Result> GetLoginAuditByUser(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLoginAuditByUser_Result>("GetLoginAuditByUser", userIdParameter);
        }
    
        public virtual ObjectResult<GetOrganizationList_Result> GetOrganizationList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrganizationList_Result>("GetOrganizationList");
        }
    
        public virtual ObjectResult<GetPersonHistoryList_Result> GetPersonHistoryList(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPersonHistoryList_Result>("GetPersonHistoryList", personIdParameter);
        }
    
        public virtual ObjectResult<GetPersonList_Result> GetPersonList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPersonList_Result>("GetPersonList");
        }
    
        public virtual ObjectResult<GetRelationshipListReport_Result> GetRelationshipListReport(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRelationshipListReport_Result>("GetRelationshipListReport", personIdParameter);
        }
    
        public virtual int ImportCSV()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ImportCSV");
        }
    
        public virtual int SetRelationshipText(Nullable<int> iN_PersonId)
        {
            var iN_PersonIdParameter = iN_PersonId.HasValue ?
                new ObjectParameter("IN_PersonId", iN_PersonId) :
                new ObjectParameter("IN_PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetRelationshipText", iN_PersonIdParameter);
        }
    
        public virtual ObjectResult<GetDashboardData_Result> GetDashboardData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDashboardData_Result>("GetDashboardData");
        }
    }
}
